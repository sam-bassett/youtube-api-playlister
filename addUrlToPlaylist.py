#!/usr/bin/python

import httplib2
import pprint
import sys
import gflags
import re

FLAGS = gflags.FLAGS

from apiclient.discovery import build
from oauth2client.client import flow_from_clientsecrets
from oauth2client.file   import Storage
from oauth2client.tools  import run

def main():
    requester = httplib2.Http(".cache")
    try:
        response, content = requester.request(sys.argv[1], "GET")
    except:
        print "Usage: %s url" % sys.argv[0]
        sys.exit(0)
    videos = getIDsFromPage(content)
    youtube = getAuth()
    # first create playlist with appropriate title+desc
    newPlaylistResp = youtube.playlists().insert(
        part="snippet,status",
        body=dict(
            snippet=dict(
                title="Autogenerated playlist",
                description="Generated from URL %s" % sys.argv[1]
            ),
            status = dict(
                privacyStatus="private"
            )
        )
    ).execute()
    playlistID = newPlaylistResp["id"]
    # now start inserting videos
    for rId in videos:
        try:
            insertResponse = youtube.playlistItems().insert(
                part="snippet",
                body=dict(
                    snippet=dict(
                        playlistId=playlistID,
                        resourceId=dict(
                            kind="youtube#video",
                            videoId  =rId
                        )
                    )
                )
            ).execute()
        except Exception as e:
            """youtube.playlists().delete(
                    id=playlistID
                ).execute()"""
            print e
            sys.exit(0)

def getIDsFromPage(content):
    videos = []
    # This bit on comments is specifically for reddit, so no sidebar links are grabbed.
    comments = False
    for line in content.split('\n'):
        if not re.search("youtube\.com/watch\?", line):
            continue
        if re.search("class=\"sitetable nestedlisting\"", line):
            comments = True
        if not comments:
            continue
        line = re.sub(r'.*?<a href="http://www\.youtube\.com/watch',
            'http://www.youtube.com/watch',line)
        line = re.sub(r'">.*?<.*$','',line)
        line = re.sub(r'" rel="nofollow','',line)
        # this gets us the URL, the resourceID is the bit after the v=
        rId = re.search(r'\?v=.{11}',line)
        rId = rId.group()
        rId = re.sub(r'\?v=','',rId)
        videos.append(rId)
    return videos

def getAuth():
    # uses OAuth2 to authorise then authenticate this command line program
    flow = flow_from_clientsecrets(
      'client_secrets.json',
      scope='https://www.googleapis.com/auth/youtube')

    storage = Storage("credstorage.json")
    credentials = storage.get()
    if credentials is None or credentials.invalid:
        credentials = run(flow,storage)

    http = httplib2.Http()
    http = credentials.authorize(http)

    youtube = build('youtube', 'v3', http=http)
    return youtube

if __name__ == '__main__':
    main()


